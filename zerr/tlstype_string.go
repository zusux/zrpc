// Code generated by "stringer -type=TLSType"; DO NOT EDIT.

package zerr

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[REQUEST_OK-0]
	_ = x[MYSQL_CONNECT_ERROR-1]
	_ = x[MYSQL_CLOSE_ERROR-2]
	_ = x[MYSQL_ERROR-3]
	_ = x[MYSQL_NO_RESULT-4]
	_ = x[REQUEST_PARAM_ERROR-16]
	_ = x[REQUEST_ERROR-17]
	_ = x[SERVER_ERROR-32]
	_ = x[REMOTE_GRPC_CONNECT_ERROR-48]
	_ = x[REMOTE_GRPC_TIMEOUT_ERROR-49]
	_ = x[REMOTE_GRPC_ERROR-50]
	_ = x[REDIS_CONNECT_ERROR-64]
	_ = x[REDIS_CLOSE_ERROR-65]
	_ = x[REDIS_ERROR-65]
	_ = x[ETCD_PARAM_ERROR-80]
	_ = x[ETCD_READ_ERROR-81]
	_ = x[ETCD_WRITE_ERROR-82]
	_ = x[ETCD_DELETE_ERROR-83]
	_ = x[ETCD_HEART_ERROR-84]
	_ = x[ETCD_REGISTER_ERROR-85]
	_ = x[ETCD_UNREGISTER_ERROR-86]
	_ = x[LOG_WRITE_ERROR-96]
	_ = x[LOG_NO_DISK_ERROR-97]
	_ = x[CONFIG_FLAG_USAGED_ERROR-112]
	_ = x[CONFIG_FILE_LOADING_ERROR-113]
	_ = x[CONFIG_LOADING_ERROR-114]
	_ = x[CONFIG_GET_CURRENT_FILE_ERROR-115]
	_ = x[PWD_DIR_NOT_FIND_ERROR-128]
	_ = x[EXECUTABLE_DIR_NOT_FIND_ERROR-128]
	_ = x[UNKNOWN_ERROR-65535]
}

const (
	_TLSType_name_0 = "REQUEST_OKMYSQL_CONNECT_ERRORMYSQL_CLOSE_ERRORMYSQL_ERRORMYSQL_NO_RESULT"
	_TLSType_name_1 = "REQUEST_PARAM_ERRORREQUEST_ERROR"
	_TLSType_name_2 = "SERVER_ERROR"
	_TLSType_name_3 = "REMOTE_GRPC_CONNECT_ERRORREMOTE_GRPC_TIMEOUT_ERRORREMOTE_GRPC_ERROR"
	_TLSType_name_4 = "REDIS_CONNECT_ERRORREDIS_CLOSE_ERROR"
	_TLSType_name_5 = "ETCD_PARAM_ERRORETCD_READ_ERRORETCD_WRITE_ERRORETCD_DELETE_ERRORETCD_HEART_ERRORETCD_REGISTER_ERRORETCD_UNREGISTER_ERROR"
	_TLSType_name_6 = "LOG_WRITE_ERRORLOG_NO_DISK_ERROR"
	_TLSType_name_7 = "CONFIG_FLAG_USAGED_ERRORCONFIG_FILE_LOADING_ERRORCONFIG_LOADING_ERRORCONFIG_GET_CURRENT_FILE_ERROR"
	_TLSType_name_8 = "PWD_DIR_NOT_FIND_ERROR"
	_TLSType_name_9 = "UNKNOWN_ERROR"
)

var (
	_TLSType_index_0 = [...]uint8{0, 10, 29, 46, 57, 72}
	_TLSType_index_1 = [...]uint8{0, 19, 32}
	_TLSType_index_3 = [...]uint8{0, 25, 50, 67}
	_TLSType_index_4 = [...]uint8{0, 19, 36}
	_TLSType_index_5 = [...]uint8{0, 16, 31, 47, 64, 80, 99, 120}
	_TLSType_index_6 = [...]uint8{0, 15, 32}
	_TLSType_index_7 = [...]uint8{0, 24, 49, 69, 98}
)

func (i TLSType) String() string {
	switch {
	case i <= 4:
		return _TLSType_name_0[_TLSType_index_0[i]:_TLSType_index_0[i+1]]
	case 16 <= i && i <= 17:
		i -= 16
		return _TLSType_name_1[_TLSType_index_1[i]:_TLSType_index_1[i+1]]
	case i == 32:
		return _TLSType_name_2
	case 48 <= i && i <= 50:
		i -= 48
		return _TLSType_name_3[_TLSType_index_3[i]:_TLSType_index_3[i+1]]
	case 64 <= i && i <= 65:
		i -= 64
		return _TLSType_name_4[_TLSType_index_4[i]:_TLSType_index_4[i+1]]
	case 80 <= i && i <= 86:
		i -= 80
		return _TLSType_name_5[_TLSType_index_5[i]:_TLSType_index_5[i+1]]
	case 96 <= i && i <= 97:
		i -= 96
		return _TLSType_name_6[_TLSType_index_6[i]:_TLSType_index_6[i+1]]
	case 112 <= i && i <= 115:
		i -= 112
		return _TLSType_name_7[_TLSType_index_7[i]:_TLSType_index_7[i+1]]
	case i == 128:
		return _TLSType_name_8
	case i == 65535:
		return _TLSType_name_9
	default:
		return "TLSType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
